{
	"info": {
		"_postman_id": "7ee15687-71c1-4584-86f2-686beda606a4",
		"name": "JSON PLACEHOLDER",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "GET-Posts",
			"id": "23c3510d-8bbb-454c-92ca-4bc89bf5b415",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{baseURL}}/posts?title_like=sunt",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "title_like",
							"value": "sunt"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET-Comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf75a837-a293-4def-8231-3e6659e9e9a6",
						"exec": [
							"pm.test(\"Should verify response status code\", () => {\r",
							"    console.log(pm.response.code)\r",
							"   // pm.response.to.have.status(200);\r",
							"   //pm.expect(pm.response.code).to.eql(200)\r",
							"   pm.expect(pm.response.code).to.be.oneOf([200, 404])\r",
							"   pm.expect(pm.response.code).to.be.a(\"number\");\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify respons Time\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.lessThan(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify respons status\", () => {\r",
							"\r",
							"    pm.expect(pm.response.status).to.eql(\"OK\");\r",
							"    pm.expect(pm.response.status).to.be.a(\"string\");\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify post ID\", () => {\r",
							"const responseBody = pm.response.json();\r",
							"console.log(responseBody[0].id)\r",
							"    pm.expect(responseBody[0].id).to.eql(1);\r",
							"    pm.expect(responseBody[0].id).to.be.a(\"number\");\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify length of name\", () => {\r",
							"const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody[1].name).to.have.lengthOf(41);\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"Should verify response email\", () => {\r",
							"const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody[1].email).to.include(\"@\");\r",
							"})\r",
							"\r",
							"pm.test(\"Should verify all response email\", () => {\r",
							"const responseBody = pm.response.json();\r",
							"responseBody.map(obiekt => {\r",
							"    pm.expect(obiekt.email).to.include(\"@\");\r",
							"})\r",
							"})\r",
							"\r",
							"//Checking Headers\r",
							"\r",
							"pm.test(\"Should verify content type\", () => {\r",
							"\r",
							"    pm.response.to.have.header(\"Content-Encoding\");\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"Should verify content value\", () => {\r",
							"\r",
							"    pm.expect(pm.response.headers.get(\"Server\")).to.eql(\"cloudflare\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "05972750-21b1-4d14-961c-12281a4f9d3c",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/comments?postId=1&postId=5&_limit=2",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						},
						{
							"key": "postId",
							"value": "5"
						},
						{
							"key": "_limit",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a5c29bc8-c5dd-42a0-b5cc-062e37dee062",
						"exec": [
							"pm.test(\"Global\", () => {\r",
							"    const expectedTitle = pm.globals.get('postTitle');\r",
							"    const resBody = pm.response.json();\r",
							"    pm.expect(resBody.title).to.eql(expectedTitle)\r",
							"})\r",
							"\r",
							"pm.test(\"Collections\", () => {\r",
							"    const expectedUrl = pm.collectionVariables.get('baseURL');\r",
							"   // console.log(expectedUrl)\r",
							"})\r",
							"\r",
							"pm.test(\"Enviroment\", () => {\r",
							"\r",
							"    const expectedUserName = pm.environment.get('userName');\r",
							"console.log(expectedUserName);\r",
							"\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "43bf599f-2b55-4122-bc8f-a5a988a3560d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": {{userID}},\r\n    \"id\": 1625,\r\n    \"title\": \"{{postTitle}}\",\r\n    \"body\": \"{{postBody}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/posts"
			},
			"response": []
		},
		{
			"name": "PUT User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5fd950f1-329e-4ddd-bece-a0214d19ce8e",
						"exec": [
							"function generatorEmail() {\r",
							"\r",
							"    const randomNumbers = Math.random()* (1000000 - 1) + 1;\r",
							"\r",
							"    console.log(randomNumbers);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "79ef17ad-6627-48ee-ba6c-f9d5ff6f289f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 3,\r\n    \"name\": \"Clementine Bauch\",\r\n    \"username\": \"{{userName}}\",\r\n    \"email\": \"test@test.pl\",\r\n    \"address\": {\r\n        \"street\": \"Douglas Extension\",\r\n        \"suite\": \"Suite 847\",\r\n        \"city\": \"McKenziehaven\",\r\n        \"zipcode\": \"59590-4157\",\r\n        \"geo\": {\r\n            \"lat\": \"-68.6102\",\r\n            \"lng\": \"-47.0653\"\r\n        }\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseURL}}/users/3"
			},
			"response": []
		},
		{
			"name": "DELETE",
			"id": "22af01c3-1a94-4400-98e6-c2f799be986e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "{{baseURL}}/users/3"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "91f68727-2875-4d50-9c65-ee598541916d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4925b9ab-e296-4e8e-b5e7-4796e684f362",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://jsonplaceholder.typicode.com",
			"type": "string"
		},
		{
			"key": "userID",
			"value": "14",
			"type": "string"
		}
	]
}